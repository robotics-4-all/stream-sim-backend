version: 2.1

executors:
  tektrain_sim:
    docker:
      - image: circleci/python:3.7.4
      - image: circleci/redis:latest
    working_directory: ~/new_infrastructure

jobs:
  build_and_test:
    executor: tektrain_sim
    steps:
      - checkout
      - run:
          name: Install Python Dependencies
          command: |
            sudo -H pip3 install --upgrade pip
            sudo pip3 install flake8
            sudo pip3 install pytest==5.4.3
            sudo pip3 install pytest-html==2.1.1
            sudo pip3 install opencv-python==4.0.0.21
            sudo pip3 install mock==2.0.0
            sudo pip3 install json-rpc==1.13.0
            sudo pip3 install google-api-core==1.21.0
            sudo pip3 install google-auth==1.18.0
            sudo pip3 install googleapis-common-protos==1.52.0
            sudo pip3 install PyYAML
            sudo pip3 install numpy
            sudo pip3 install wave
            sudo pip3 install pillow
            sudo pip3 install qrcode[pil]
            sudo pip3 install colorama
      - run:
          name: Build & Install Commlib
          command: |
            git clone --branch v0.3.1 git@github.com:robotics-4-all/commlib-py.git
            cd commlib-py
            sudo python3 setup.py install
      - run:
          name: Build & Install derp-me
          command: |
            git clone --branch v0.1.2 git@github.com:robotics-4-all/derp-me.git
            cd derp-me
            sudo python3 setup.py install
      - run:
          name: Build & Install Streamsim backend
          command: |
            git clone --single-branch --branch ${CIRCLE_BRANCH} https://github.com/robotics-4-all/stream-sim-backend.git
            cd stream-sim-backend
            sudo python3 setup.py install
      - run:
          name: Setup derp-me (background)
          command: |
            cd ./derp-me/bin
            python3 derpme.py
          background: true
      - run:
          name: Setup Stream-sim-backend (background)
          command: |
            sleep 2
            cd ./stream-sim-backend/bin/
            sudo python3 main.py sfhmmy
          background: true
      - run:
          name: Setup results directories
          command: |
            mkdir -p ~/new_infrastructure/test-reports
            sleep 10
      - run:
          name: Test envs and devices
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            pytest *envs_and_devices* --junitxml=~/new_infrastructure/test-reports/junit.xml
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*envs_and_devices*
      - run:
          name: Test tf
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            pytest *tf* --junitxml=~/new_infrastructure/test-reports/junit.xml
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*tf*
      - run:
          name: Test microphone
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *microphone*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*microphone*
      - run:
          name: Test alarms
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *alarm*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*alarm*
      - run:
          name: Test cameras
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *camera*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*camera*
      - run:
          name: Test ambient light
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *amb_light*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*amb_light*
      - run:
          name: Test distance
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *distance*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*distance*
      - run:
          name: Test gas
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *gas_sensor*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*gas_sensor*
      - run:
          name: Test humidity
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *humidity_sensor*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*humidity_sensor*
      - run:
          name: Test humidifier
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *humidifier*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*humidifier*
      - run:
          name: Test light
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *light*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*light*
      - run:
          name: Test pan-tilt
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *pan_tilt*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*pan_tilt*
      - run:
          name: Test pH
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *ph_sensor*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*ph_sensor*
      - run:
          name: Test relay
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *relay*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*relay*
      - run:
          name: Test speaker
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *speaker*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*speaker*
      - run:
          name: Test temperature
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *temperature*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*temperature*
      - run:
          name: Test thermostat
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *thermostat*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*thermostat*
      - run:
          name: Test button
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *button*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*button*
      - run:
          name: Test encoder
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *encoder*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*encoder*
      - run:
          name: Test env sensor
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *env_sensor*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*env_sensor*
      - run:
          name: Test imu
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *imu*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*imu*
      - run:
          name: Test IR
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *ir_sensor*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*ir_sensor*
      - run:
          name: Test leds
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *leds*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*leds*
      - run:
          name: Test line follower
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *line_follower*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*line_follower*
      - run:
          name: Test motion
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *motion*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*motion*
      - run:
          name: Test sonar
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *sonar*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*sonar*
      - run:
          name: Test tof
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *tof*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*tof*
      - run:
          name: Test touch screen
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v *touch_screen*
            rm ~/new_infrastructure/stream-sim-backend/tests/controllers/*touch_screen*
      - run:
          name: Test the reset if exist
          command: |
            cd ~/new_infrastructure/stream-sim-backend/tests/controllers
            python3 -m unittest -v
      - store_test_results:
          path: ~/new_infrastructure/test-reports/
      - store_artifacts:
          path: ~/new_infrastructure/test-reports/

workflows:
  build_and_test:
    jobs:
      - build_and_test
